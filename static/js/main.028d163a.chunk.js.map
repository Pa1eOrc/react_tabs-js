{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["TabContent","tab","className","content","Tabs","tabs","selectedTabId","onTabSelected","activeTabId","some","id","map","isActive","href","onClick","title","App","useState","setSelectedTabId","currentTab","find","ReactDOM","render","document","getElementById"],"mappings":"6MAAMA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OACjB,qBACEC,UAAU,QACV,UAAQ,aAFV,SAIGD,EAAIE,WAIIC,EAAO,SAAC,GAId,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEIC,EAAcF,EAMlB,OAJKD,EAAKI,MAAK,SAAAR,GAAG,OAAIA,EAAIS,KAAOJ,OAC/BE,EAAcH,EAAK,GAAGK,IAItB,sBAAK,UAAQ,gBAAb,UACE,qBAAKR,UAAU,gBAAf,SACE,6BACGG,EAAKM,KAAI,SAACV,GACT,IAAMW,EAAWJ,IAAgBP,EAAIS,GAErC,OACE,oBACER,UAAWU,EAAW,YAAc,GACpC,UAAQ,MAFV,SAKE,mBACEC,KAAI,WAAMZ,EAAIS,IACd,UAAQ,UACRI,QAAS,WACFF,GACHL,EAAcN,IALpB,SASGA,EAAIc,SAXFd,EAAIS,WAkBlBL,EAAKM,KAAI,SAAAV,GAAG,OACXK,IAAkBL,EAAIS,IACnB,cAAC,EAAD,CAAyBT,IAAKA,GAAbA,EAAIS,WC5CnBL,EAAO,CAClB,CAAEK,GAAI,QAASK,MAAO,QAASZ,QAAS,eACxC,CAAEO,GAAI,QAASK,MAAO,QAASZ,QAAS,eACxC,CAAEO,GAAI,QAASK,MAAO,QAASZ,QAAS,gBAG7Ba,EAAM,WACjB,MAA0CC,mBAAS,SAAnD,mBAAOX,EAAP,KAAsBY,EAAtB,KACMC,EAAad,EAAKe,MACtB,SAAAnB,GAAG,OAAIA,EAAIS,KAAOJ,KAGpB,OACE,sBAAKJ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBiB,EAAWJ,SAGjC,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAACN,GACdiB,EAAiBjB,EAAIS,WC1B/BW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.028d163a.chunk.js","sourcesContent":["const TabContent = ({ tab }) => (\n  <div\n    className=\"block\"\n    data-cy=\"TabContent\"\n  >\n    {tab.content}\n  </div>\n);\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  let activeTabId = selectedTabId;\n\n  if (!tabs.some(tab => tab.id === selectedTabId)) {\n    activeTabId = tabs[0].id;\n  }\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const isActive = activeTabId === tab.id;\n\n            return (\n              <li\n                className={isActive ? 'is-active' : ''}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (!isActive) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      {tabs.map(tab => (\n        selectedTabId === tab.id\n        && <TabContent key={tab.id} tab={tab} />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n  const currentTab = tabs.find(\n    tab => tab.id === selectedTabId,\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${currentTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={(tab) => {\n          setSelectedTabId(tab.id);\n        }}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}